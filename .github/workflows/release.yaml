name: Build and Release

on:
  push:
    tags:
      # Trigger on version tags like v1.0.0
      - "v0.1.0"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux, darwin]
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.3"

      - name: Set environment variables for cross-compilation
        run: |
          echo "GOOS=${{ matrix.os }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Build binary
        run: |
          mkdir -p build
          go build -o build/${{ matrix.os }}_${{ matrix.arch }}/transpiler main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}_${{ matrix.arch }}_transpiler
          path: build/${{ matrix.os }}_${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: build

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            **Release Notes**
            - Automatically built binaries for multiple platforms.

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build
          asset_name: transpiler_${{ matrix.os }}_${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
